name: Node Js Server

on:
  schedule:
  - cron:  '00 5 * * *'
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  NODEJS-Node10-AMD64:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image Nodejs 10
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        NODEJS_VERSION: 10
        APP_CODE_PATH_HOST: /tmp/app/
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=nodejs_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  mariadb:latest
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=nodejs_default -p 27017:27017  mongo:latest
    - name: Node and NPM version check
      run:  |
        docker exec nodejs_nodejs_1 node -v
        docker exec nodejs_nodejs_1 npm -v
    - name: Download and install the "mysql" module
      run: docker exec nodejs_nodejs_1 npm install mysql
    - name: Download Database information preconfigure js file
      run: docker exec nodejs_nodejs_1 wget -O /src/demo_db_connection.js https://raw.githubusercontent.com/nabad600/image-test-file/main/demo_db_connection.js
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Maridb conncection check
      run: docker exec nodejs_nodejs_1 node demo_db_connection.js
    - name: Download and install the "mongodb" module
      run: docker exec nodejs_nodejs_1 npm install mongodb --save
    - name: Download encoding js file (ReferenceError TextEncoder is not defined fix)
      run: docker exec nodejs_nodejs_1 wget -O /src/node_modules/whatwg-url/lib/encoding.js https://raw.githubusercontent.com/nabad600/image-test-file/main/encoding.js
    - name: Download Database information preconfigure js file
      run: docker exec nodejs_nodejs_1 wget -O /src/mongo_db_connection.js https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo_db_connection.js
    - name: Mongodb Connection Check
      run: docker exec nodejs_nodejs_1 node mongo_db_connection.js
    - name: Check Node js install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:3000)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Web site checking
      run:  |
        curl -i http://localhost:3000/ 
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker image prune -a
        echo "y" | docker volume prune
        sudo rm -rf /tmp/app/
  NODEJS-Node10-ARM64:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image Nodejs 10
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        NODEJS_VERSION: 10
        APP_CODE_PATH_HOST: /tmp/app/
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=nodejs_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  mariadb:latest
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=nodejs_default -p 27017:27017  mongo:latest
    - name: Node and NPM version check
      run:  |
        docker exec nodejs_nodejs_1 node -v
        docker exec nodejs_nodejs_1 npm -v
    - name: Download and install the "mysql" module
      run: docker exec nodejs_nodejs_1 npm install mysql
    - name: Download Database information preconfigure js file
      run: docker exec nodejs_nodejs_1 wget -O /src/demo_db_connection.js https://raw.githubusercontent.com/nabad600/image-test-file/main/demo_db_connection.js
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Maridb conncection check
      run: docker exec nodejs_nodejs_1 node demo_db_connection.js
    - name: Download and install the "mongodb" module
      run: docker exec nodejs_nodejs_1 npm install mongodb --save
    - name: Download encoding js file (ReferenceError TextEncoder is not defined fix)
      run: docker exec nodejs_nodejs_1 wget -O /src/node_modules/whatwg-url/lib/encoding.js https://raw.githubusercontent.com/nabad600/image-test-file/main/encoding.js
    - name: Download Database information preconfigure js file
      run: docker exec nodejs_nodejs_1 wget -O /src/mongo_db_connection.js https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo_db_connection.js
    - name: Mongodb Connection Check
      run: docker exec nodejs_nodejs_1 node mongo_db_connection.js
    - name: Check Node js install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:3000)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: API checking
      run:  |
        curl -i http://localhost:3000/
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker system prune -a
        echo "y" | docker image prune -a
        echo "y" | docker volume prune
        sudo rm -rf /tmp/app/

  NODEJS-Node12-AMD64:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image Nodejs 12
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        NODEJS_VERSION: 12
        APP_CODE_PATH_HOST: /tmp/app/
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=nodejs_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  mariadb:latest
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=nodejs_default -p 27017:27017  mongo:latest
    - name: Node and NPM version check
      run:  |
        docker exec nodejs_nodejs_1 node -v
        docker exec nodejs_nodejs_1 npm -v
    - name: Download and install the "mysql" module
      run: docker exec nodejs_nodejs_1 npm install mysql
    - name: Download Database information preconfigure js file
      run: docker exec nodejs_nodejs_1 wget -O /src/demo_db_connection.js https://raw.githubusercontent.com/nabad600/image-test-file/main/demo_db_connection.js
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Maridb conncection check
      run: docker exec nodejs_nodejs_1 node demo_db_connection.js
    - name: Download and install the "mongodb" module
      run: docker exec nodejs_nodejs_1 npm install mongodb --save
    - name: Download encoding js file (ReferenceError TextEncoder is not defined fix)
      run: docker exec nodejs_nodejs_1 wget -O /src/node_modules/whatwg-url/lib/encoding.js https://raw.githubusercontent.com/nabad600/image-test-file/main/encoding.js
    - name: Download Database information preconfigure js file
      run: docker exec nodejs_nodejs_1 wget -O /src/mongo_db_connection.js https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo_db_connection.js
    - name: Mongodb Connection Check
      run: docker exec nodejs_nodejs_1 node mongo_db_connection.js
    - name: Check Node js install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:3000)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Web site checking
      run:  |
        curl -i http://localhost:3000/ 
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker image prune -a
        echo "y" | docker volume prune
        sudo rm -rf /tmp/app/
  NODEJS-Node12-ARM64:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image Nodejs 12
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        NODEJS_VERSION: 12
        APP_CODE_PATH_HOST: /tmp/app/
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=nodejs_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  mariadb:latest
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=nodejs_default -p 27017:27017  mongo:latest
    - name: Node and NPM version check
      run:  |
        docker exec nodejs_nodejs_1 node -v
        docker exec nodejs_nodejs_1 npm -v
    - name: Download and install the "mysql" module
      run: docker exec nodejs_nodejs_1 npm install mysql
    - name: Download Database information preconfigure js file
      run: docker exec nodejs_nodejs_1 wget -O /src/demo_db_connection.js https://raw.githubusercontent.com/nabad600/image-test-file/main/demo_db_connection.js
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Maridb conncection check
      run: docker exec nodejs_nodejs_1 node demo_db_connection.js
    - name: Download and install the "mongodb" module
      run: docker exec nodejs_nodejs_1 npm install mongodb --save
    - name: Download encoding js file (ReferenceError TextEncoder is not defined fix)
      run: docker exec nodejs_nodejs_1 wget -O /src/node_modules/whatwg-url/lib/encoding.js https://raw.githubusercontent.com/nabad600/image-test-file/main/encoding.js
    - name: Download Database information preconfigure js file
      run: docker exec nodejs_nodejs_1 wget -O /src/mongo_db_connection.js https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo_db_connection.js
    - name: Mongodb Connection Check
      run: docker exec nodejs_nodejs_1 node mongo_db_connection.js
    - name: Check Node js install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:3000)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: API checking
      run:  |
        curl -i http://localhost:3000/
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        docker container stop $(docker container ls -aq)
        echo "y" | docker system prune -a
        echo "y" | docker image prune -a
        echo "y" | docker volume prune
        sudo rm -rf /tmp/app/

  NODEJS-Node13-AMD64:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image Nodejs 13
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        NODEJS_VERSION: 13
        APP_CODE_PATH_HOST: /tmp/app/
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=nodejs_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  mariadb:latest
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=nodejs_default -p 27017:27017  mongo:latest
    - name: Node and NPM version check
      run:  |
        docker exec nodejs_nodejs_1 node -v
        docker exec nodejs_nodejs_1 npm -v
    - name: Download and install the "mysql" module
      run: docker exec nodejs_nodejs_1 npm install mysql
    - name: Download Database information preconfigure js file
      run: docker exec nodejs_nodejs_1 wget -O /src/demo_db_connection.js https://raw.githubusercontent.com/nabad600/image-test-file/main/demo_db_connection.js
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Maridb conncection check
      run: docker exec nodejs_nodejs_1 node demo_db_connection.js
    - name: Download and install the "mongodb" module
      run: docker exec nodejs_nodejs_1 npm install mongodb --save
    - name: Download encoding js file (ReferenceError TextEncoder is not defined fix)
      run: docker exec nodejs_nodejs_1 wget -O /src/node_modules/whatwg-url/lib/encoding.js https://raw.githubusercontent.com/nabad600/image-test-file/main/encoding.js
    - name: Download Database information preconfigure js file
      run: docker exec nodejs_nodejs_1 wget -O /src/mongo_db_connection.js https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo_db_connection.js
    - name: Mongodb Connection Check
      run: docker exec nodejs_nodejs_1 node mongo_db_connection.js
    - name: Check Node js install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:3000)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Web site checking
      run:  |
        curl -i http://localhost:3000/ 
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker image prune -a
        echo "y" | docker volume prune
        sudo rm -rf /tmp/app/
  NODEJS-Node13-ARM64:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image Nodejs 13
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        NODEJS_VERSION: 13
        APP_CODE_PATH_HOST: /tmp/app/
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=nodejs_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  mariadb:latest
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=nodejs_default -p 27017:27017  mongo:latest
    - name: Node and NPM version check
      run:  |
        docker exec nodejs_nodejs_1 node -v
        docker exec nodejs_nodejs_1 npm -v
    - name: Download and install the "mysql" module
      run: docker exec nodejs_nodejs_1 npm install mysql
    - name: Download Database information preconfigure js file
      run: docker exec nodejs_nodejs_1 wget -O /src/demo_db_connection.js https://raw.githubusercontent.com/nabad600/image-test-file/main/demo_db_connection.js
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Maridb conncection check
      run: docker exec nodejs_nodejs_1 node demo_db_connection.js
    - name: Download and install the "mongodb" module
      run: docker exec nodejs_nodejs_1 npm install mongodb --save
    - name: Download encoding js file (ReferenceError TextEncoder is not defined fix)
      run: docker exec nodejs_nodejs_1 wget -O /src/node_modules/whatwg-url/lib/encoding.js https://raw.githubusercontent.com/nabad600/image-test-file/main/encoding.js
    - name: Download Database information preconfigure js file
      run: docker exec nodejs_nodejs_1 wget -O /src/mongo_db_connection.js https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo_db_connection.js
    - name: Mongodb Connection Check
      run: docker exec nodejs_nodejs_1 node mongo_db_connection.js
    - name: Check Node js install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:3000)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: API checking
      run:  |
        curl -i http://localhost:3000/
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker system prune -a
        echo "y" | docker image prune -a
        echo "y" | docker volume prune
        sudo rm -rf /tmp/app/


  NODEJS-Node14-AMD64:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image Nodejs 14
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        NODEJS_VERSION: 14
        APP_CODE_PATH_HOST: /tmp/app/
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=nodejs_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  mariadb:latest
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=nodejs_default -p 27017:27017  mongo:latest
    - name: Node and NPM version check
      run:  |
        docker exec nodejs_nodejs_1 node -v
        docker exec nodejs_nodejs_1 npm -v
    - name: Download and install the "mysql" module
      run: docker exec nodejs_nodejs_1 npm install mysql
    - name: Download Database information preconfigure js file
      run: docker exec nodejs_nodejs_1 wget -O /src/demo_db_connection.js https://raw.githubusercontent.com/nabad600/image-test-file/main/demo_db_connection.js
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Maridb conncection check
      run: docker exec nodejs_nodejs_1 node demo_db_connection.js
    - name: Download and install the "mongodb" module
      run: docker exec nodejs_nodejs_1 npm install mongodb --save
    - name: Download encoding js file (ReferenceError TextEncoder is not defined fix)
      run: docker exec nodejs_nodejs_1 wget -O /src/node_modules/whatwg-url/lib/encoding.js https://raw.githubusercontent.com/nabad600/image-test-file/main/encoding.js
    - name: Download Database information preconfigure js file
      run: docker exec nodejs_nodejs_1 wget -O /src/mongo_db_connection.js https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo_db_connection.js
    - name: Mongodb Connection Check
      run: docker exec nodejs_nodejs_1 node mongo_db_connection.js
    - name: Check Node js install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:3000)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Web site checking
      run:  |
        curl -i http://localhost:3000/ 
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker image prune -a
        echo "y" | docker volume prune
        sudo rm -rf /tmp/app/
  NODEJS-Node14-ARM64:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image Nodejs 14
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        NODEJS_VERSION: 14
        APP_CODE_PATH_HOST: /tmp/app/
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=nodejs_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  mariadb:latest
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=nodejs_default -p 27017:27017  mongo:latest
    - name: Node and NPM version check
      run:  |
        docker exec nodejs_nodejs_1 node -v
        docker exec nodejs_nodejs_1 npm -v
    - name: Download and install the "mysql" module
      run: docker exec nodejs_nodejs_1 npm install mysql
    - name: Download Database information preconfigure js file
      run: docker exec nodejs_nodejs_1 wget -O /src/demo_db_connection.js https://raw.githubusercontent.com/nabad600/image-test-file/main/demo_db_connection.js
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Maridb conncection check
      run: docker exec nodejs_nodejs_1 node demo_db_connection.js
    - name: Download and install the "mongodb" module
      run: docker exec nodejs_nodejs_1 npm install mongodb --save
    - name: Download encoding js file (ReferenceError TextEncoder is not defined fix)
      run: docker exec nodejs_nodejs_1 wget -O /src/node_modules/whatwg-url/lib/encoding.js https://raw.githubusercontent.com/nabad600/image-test-file/main/encoding.js
    - name: Download Database information preconfigure js file
      run: docker exec nodejs_nodejs_1 wget -O /src/mongo_db_connection.js https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo_db_connection.js
    - name: Mongodb Connection Check
      run: docker exec nodejs_nodejs_1 node mongo_db_connection.js
    - name: Check Node js install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:3000)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: API checking
      run:  |
        curl -i http://localhost:3000/
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        docker container stop $(docker container ls -aq)
        echo "y" | docker system prune -a
        echo "y" | docker image prune -a
        echo "y" | docker volume prune
        sudo rm -rf /tmp/app/



  NODEJS-Node16-AMD64:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image Nodejs 16
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        NODEJS_VERSION: 16
        APP_CODE_PATH_HOST: /tmp/app/
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=nodejs_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  mariadb:latest
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=nodejs_default -p 27017:27017  mongo:latest
    - name: Node and NPM version check
      run:  |
        docker exec nodejs_nodejs_1 node -v
        docker exec nodejs_nodejs_1 npm -v
    - name: Download and install the "mysql" module
      run: docker exec nodejs_nodejs_1 npm install mysql
    - name: Download Database information preconfigure js file
      run: docker exec nodejs_nodejs_1 wget -O /src/demo_db_connection.js https://raw.githubusercontent.com/nabad600/image-test-file/main/demo_db_connection.js
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Maridb conncection check
      run: docker exec nodejs_nodejs_1 node demo_db_connection.js
    - name: Download and install the "mongodb" module
      run: docker exec nodejs_nodejs_1 npm install mongodb --save
    - name: Download encoding js file (ReferenceError TextEncoder is not defined fix)
      run: docker exec nodejs_nodejs_1 wget -O /src/node_modules/whatwg-url/lib/encoding.js https://raw.githubusercontent.com/nabad600/image-test-file/main/encoding.js
    - name: Download Database information preconfigure js file
      run: docker exec nodejs_nodejs_1 wget -O /src/mongo_db_connection.js https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo_db_connection.js
    - name: Mongodb Connection Check
      run: docker exec nodejs_nodejs_1 node mongo_db_connection.js
    - name: Check Node js install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:3000)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Web site checking
      run:  |
        curl -i http://localhost:3000/ 
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker image prune -a
        echo "y" | docker volume prune
        sudo rm -rf /tmp/app/
  NODEJS-Node16-ARM64:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image Nodejs 16
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        NODEJS_VERSION: 16
        APP_CODE_PATH_HOST: /tmp/app/
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=nodejs_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  mariadb:latest
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=nodejs_default -p 27017:27017  mongo:latest
    - name: Node and NPM version check
      run:  |
        docker exec nodejs_nodejs_1 node -v
        docker exec nodejs_nodejs_1 npm -v
    - name: Download and install the "mysql" module
      run: docker exec nodejs_nodejs_1 npm install mysql
    - name: Download Database information preconfigure js file
      run: docker exec nodejs_nodejs_1 wget -O /src/demo_db_connection.js https://raw.githubusercontent.com/nabad600/image-test-file/main/demo_db_connection.js
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Maridb conncection check
      run: docker exec nodejs_nodejs_1 node demo_db_connection.js
    - name: Download and install the "mongodb" module
      run: docker exec nodejs_nodejs_1 npm install mongodb --save
    - name: Download encoding js file (ReferenceError TextEncoder is not defined fix)
      run: docker exec nodejs_nodejs_1 wget -O /src/node_modules/whatwg-url/lib/encoding.js https://raw.githubusercontent.com/nabad600/image-test-file/main/encoding.js
    - name: Download Database information preconfigure js file
      run: docker exec nodejs_nodejs_1 wget -O /src/mongo_db_connection.js https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo_db_connection.js
    - name: Mongodb Connection Check
      run: docker exec nodejs_nodejs_1 node mongo_db_connection.js
    - name: Check Node js install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:3000)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: API checking
      run:  |
        curl -i http://localhost:3000/
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker system prune -a
        echo "y" | docker image prune -a
        echo "y" | docker volume prune
        sudo rm -rf /tmp/app/
    

  NODEJS-Node17-AMD64:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image Nodejs 17
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        NODEJS_VERSION: 17
        APP_CODE_PATH_HOST: /tmp/app/
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=nodejs_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  mariadb:latest
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=nodejs_default -p 27017:27017  mongo:latest
    - name: Node and NPM version check
      run:  |
        docker exec nodejs_nodejs_1 node -v
        docker exec nodejs_nodejs_1 npm -v
    - name: Download and install the "mysql" module
      run: docker exec nodejs_nodejs_1 npm install mysql
    - name: Download Database information preconfigure js file
      run: docker exec nodejs_nodejs_1 wget -O /src/demo_db_connection.js https://raw.githubusercontent.com/nabad600/image-test-file/main/demo_db_connection.js
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Maridb conncection check
      run: docker exec nodejs_nodejs_1 node demo_db_connection.js
    - name: Download and install the "mongodb" module
      run: docker exec nodejs_nodejs_1 npm install mongodb --save
    - name: Download encoding js file (ReferenceError TextEncoder is not defined fix)
      run: docker exec nodejs_nodejs_1 wget -O /src/node_modules/whatwg-url/lib/encoding.js https://raw.githubusercontent.com/nabad600/image-test-file/main/encoding.js
    - name: Download Database information preconfigure js file
      run: docker exec nodejs_nodejs_1 wget -O /src/mongo_db_connection.js https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo_db_connection.js
    - name: Mongodb Connection Check
      run: docker exec nodejs_nodejs_1 node mongo_db_connection.js
    - name: Check Node js install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:3000)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Web site checking
      run:  |
        curl -i http://localhost:3000/ 
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker image prune -a
        echo "y" | docker volume prune
        sudo rm -rf /tmp/app/
  NODEJS-Node17-ARM64:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image Nodejs 17
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        NODEJS_VERSION: 17
        APP_CODE_PATH_HOST: /tmp/app/
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=nodejs_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  mariadb:latest
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=nodejs_default -p 27017:27017  mongo:latest
    - name: Node and NPM version check
      run:  |
        docker exec nodejs_nodejs_1 node -v
        docker exec nodejs_nodejs_1 npm -v
    - name: Download and install the "mysql" module
      run: docker exec nodejs_nodejs_1 npm install mysql
    - name: Download Database information preconfigure js file
      run: docker exec nodejs_nodejs_1 wget -O /src/demo_db_connection.js https://raw.githubusercontent.com/nabad600/image-test-file/main/demo_db_connection.js
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Maridb conncection check
      run: docker exec nodejs_nodejs_1 node demo_db_connection.js
    - name: Download and install the "mongodb" module
      run: docker exec nodejs_nodejs_1 npm install mongodb --save
    - name: Download encoding js file (ReferenceError TextEncoder is not defined fix)
      run: docker exec nodejs_nodejs_1 wget -O /src/node_modules/whatwg-url/lib/encoding.js https://raw.githubusercontent.com/nabad600/image-test-file/main/encoding.js
    - name: Download Database information preconfigure js file
      run: docker exec nodejs_nodejs_1 wget -O /src/mongo_db_connection.js https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo_db_connection.js
    - name: Mongodb Connection Check
      run: docker exec nodejs_nodejs_1 node mongo_db_connection.js
    - name: Check Node js install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:3000)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: API checking
      run:  |
        curl -i http://localhost:3000/
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker system prune -a
        echo "y" | docker image prune -a
        echo "y" | docker volume prune
        sudo rm -rf /tmp/app/


  NODEJS-Node18-AMD64:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image Nodejs 18
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        NODEJS_VERSION: 18
        APP_CODE_PATH_HOST: /tmp/app/
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=nodejs_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  mariadb:latest
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=nodejs_default -p 27017:27017  mongo:latest
    - name: Node and NPM version check
      run:  |
        docker exec nodejs_nodejs_1 node -v
        docker exec nodejs_nodejs_1 npm -v
    - name: Download and install the "mysql" module
      run: docker exec nodejs_nodejs_1 npm install mysql
    - name: Download Database information preconfigure js file
      run: docker exec nodejs_nodejs_1 wget -O /src/demo_db_connection.js https://raw.githubusercontent.com/nabad600/image-test-file/main/demo_db_connection.js
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Maridb conncection check
      run: docker exec nodejs_nodejs_1 node demo_db_connection.js
    - name: Download and install the "mongodb" module
      run: docker exec nodejs_nodejs_1 npm install mongodb --save
    - name: Download encoding js file (ReferenceError TextEncoder is not defined fix)
      run: docker exec nodejs_nodejs_1 wget -O /src/node_modules/whatwg-url/lib/encoding.js https://raw.githubusercontent.com/nabad600/image-test-file/main/encoding.js
    - name: Download Database information preconfigure js file
      run: docker exec nodejs_nodejs_1 wget -O /src/mongo_db_connection.js https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo_db_connection.js
    - name: Mongodb Connection Check
      run: docker exec nodejs_nodejs_1 node mongo_db_connection.js
    - name: Check Node js install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:3000)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Web site checking
      run:  |
        curl -i http://localhost:3000/ 
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker image prune -a
        echo "y" | docker volume prune
        sudo rm -rf /tmp/app/
  NODEJS-Node18-ARM64:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image Nodejs 18
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        NODEJS_VERSION: 18
        APP_CODE_PATH_HOST: /tmp/app/
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=nodejs_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  mariadb:latest
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=nodejs_default -p 27017:27017  mongo:latest
    - name: Node and NPM version check
      run:  |
        docker exec nodejs_nodejs_1 node -v
        docker exec nodejs_nodejs_1 npm -v
    - name: Download and install the "mysql" module
      run: docker exec nodejs_nodejs_1 npm install mysql
    - name: Download Database information preconfigure js file
      run: docker exec nodejs_nodejs_1 wget -O /src/demo_db_connection.js https://raw.githubusercontent.com/nabad600/image-test-file/main/demo_db_connection.js
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Maridb conncection check
      run: docker exec nodejs_nodejs_1 node demo_db_connection.js
    - name: Download and install the "mongodb" module
      run: docker exec nodejs_nodejs_1 npm install mongodb --save
    - name: Download encoding js file (ReferenceError TextEncoder is not defined fix)
      run: docker exec nodejs_nodejs_1 wget -O /src/node_modules/whatwg-url/lib/encoding.js https://raw.githubusercontent.com/nabad600/image-test-file/main/encoding.js
    - name: Download Database information preconfigure js file
      run: docker exec nodejs_nodejs_1 wget -O /src/mongo_db_connection.js https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo_db_connection.js
    - name: Mongodb Connection Check
      run: docker exec nodejs_nodejs_1 node mongo_db_connection.js
    - name: Check Node js install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:3000)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: API checking
      run:  |
        curl -i http://localhost:3000/
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker system prune -a
        echo "y" | docker image prune -a
        echo "y" | docker volume prune
        sudo rm -rf /tmp/app/


  NODEJS-Node19-AMD64:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image Nodejs 19
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        NODEJS_VERSION: 19
        APP_CODE_PATH_HOST: /tmp/app/
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=nodejs_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  mariadb:latest
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=nodejs_default -p 27017:27017  mongo:latest
    - name: Node and NPM version check
      run:  |
        docker exec nodejs_nodejs_1 node -v
        docker exec nodejs_nodejs_1 npm -v
    - name: Download and install the "mysql" module
      run: docker exec nodejs_nodejs_1 npm install mysql
    - name: Download Database information preconfigure js file
      run: docker exec nodejs_nodejs_1 wget -O /src/demo_db_connection.js https://raw.githubusercontent.com/nabad600/image-test-file/main/demo_db_connection.js
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Maridb conncection check
      run: docker exec nodejs_nodejs_1 node demo_db_connection.js
    - name: Download and install the "mongodb" module
      run: docker exec nodejs_nodejs_1 npm install mongodb --save
    - name: Download encoding js file (ReferenceError TextEncoder is not defined fix)
      run: docker exec nodejs_nodejs_1 wget -O /src/node_modules/whatwg-url/lib/encoding.js https://raw.githubusercontent.com/nabad600/image-test-file/main/encoding.js
    - name: Download Database information preconfigure js file
      run: docker exec nodejs_nodejs_1 wget -O /src/mongo_db_connection.js https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo_db_connection.js
    - name: Mongodb Connection Check
      run: docker exec nodejs_nodejs_1 node mongo_db_connection.js
    - name: Check Node js install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:3000)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Web site checking
      run:  |
        curl -i http://localhost:3000/ 
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker image prune -a
        echo "y" | docker volume prune
        sudo rm -rf /tmp/app/
  NODEJS-Node19-ARM64:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image Nodejs 19
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        NODEJS_VERSION: 19
        APP_CODE_PATH_HOST: /tmp/app/
    - name: Build the Docker image mariadb
      run: docker run --detach --name mariadb --network=nodejs_default -p 3306:3306 --env MARIADB_DATABASE=test --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=password  mariadb:latest
    - name: Build the Docker image Mongodb
      run: docker run --detach --name mongo --network=nodejs_default -p 27017:27017  mongo:latest
    - name: Node and NPM version check
      run:  |
        docker exec nodejs_nodejs_1 node -v
        docker exec nodejs_nodejs_1 npm -v
    - name: Download and install the "mysql" module
      run: docker exec nodejs_nodejs_1 npm install mysql
    - name: Download Database information preconfigure js file
      run: docker exec nodejs_nodejs_1 wget -O /src/demo_db_connection.js https://raw.githubusercontent.com/nabad600/image-test-file/main/demo_db_connection.js
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec mariadb mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Maridb conncection check
      run: docker exec nodejs_nodejs_1 node demo_db_connection.js
    - name: Download and install the "mongodb" module
      run: docker exec nodejs_nodejs_1 npm install mongodb --save
    - name: Download encoding js file (ReferenceError TextEncoder is not defined fix)
      run: docker exec nodejs_nodejs_1 wget -O /src/node_modules/whatwg-url/lib/encoding.js https://raw.githubusercontent.com/nabad600/image-test-file/main/encoding.js
    - name: Download Database information preconfigure js file
      run: docker exec nodejs_nodejs_1 wget -O /src/mongo_db_connection.js https://raw.githubusercontent.com/nabad600/image-test-file/main/mongo_db_connection.js
    - name: Mongodb Connection Check
      run: docker exec nodejs_nodejs_1 node mongo_db_connection.js
    - name: Check Node js install or not
      run:  |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:3000)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: API checking
      run:  |
        curl -i http://localhost:3000/
    - name: Destroy container and file
      run:  |
        docker stop mariadb
        docker stop mongo
        docker-compose down
        docker stop $(docker ps -a -q)
        echo "y" | docker system prune -a
        echo "y" | docker image prune -a
        echo "y" | docker volume prune
        sudo rm -rf /tmp/app/